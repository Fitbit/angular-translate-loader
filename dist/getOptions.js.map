{"version":3,"sources":["../src/getOptions.js"],"names":["toRegExp","RegExp","str","getLocaleInterpolate","localeInterpolate","options","Array","isArray","map","x","loaderContext"],"mappings":";;;;;;AAAA;;AAMA;;AAGA;;;;;;AAEA;;;;;AAKA,IAAMA,WAAW,SAAXA,QAAW;AAAA,WAAO,IAAIC,MAAJ,CAAW,0BAAaC,GAAb,CAAX,CAAP;AAAA,CAAjB;;AAEA;;;;;AAKA,IAAMC,uBAAuB,SAAvBA,oBAAuB,UAAW;AACpC,QAAIC,oBAAoBC,QAAQD,iBAAhC;;AAEA,QAAI,sBAASC,QAAQD,iBAAjB,CAAJ,EAAyC;AACrCA,4BAAoB,CAChBC,QAAQD,iBADQ,CAApB;AAGH,KAJD,MAIO,IAAI,sBAASC,QAAQD,iBAAjB,CAAJ,EAAyC;AAC5CA,4BAAoB,CAChBC,QAAQD,iBADQ,CAApB;AAGH;;AAED,QAAIE,MAAMC,OAAN,CAAcH,iBAAd,CAAJ,EAAsC;AAClCA,4BAAoBA,kBAAkBI,GAAlB,CAAsB;AAAA,mBAAK,sBAASC,CAAT,IAAcA,CAAd,GAAkBT,SAASS,CAAT,CAAvB;AAAA,SAAtB,CAApB;AACH;;AAED,WAAOL,iBAAP;AACH,CAlBD;;AAoBA;;;;;kBAIe,yBAAiB;AAC5B,QAAMC,UAAU,6BAAWK,aAAX,KAA6B,EAA7C;;AAEAL,YAAQD,iBAAR,GAA4BD,qBAAqBE,OAArB,CAA5B;;AAEA,WAAO,sBAASA,OAAT,2BAAP;AACH,C","file":"getOptions.js","sourcesContent":["import {\r\n    defaults,\r\n    isString,\r\n    isRegExp,\r\n    escapeRegExp\r\n} from 'lodash';\r\nimport {\r\n    getOptions\r\n} from 'loader-utils';\r\nimport DEFAULT_OPTIONS from './defaultOptions';\r\n\r\n/**\r\n * @private\r\n * @param {String} str\r\n * @returns {RegExp}\r\n */\r\nconst toRegExp = str => new RegExp(escapeRegExp(str));\r\n\r\n/**\r\n * @private\r\n * @param {Object} options\r\n * @returns {RegExp[]}\r\n */\r\nconst getLocaleInterpolate = options => {\r\n    let localeInterpolate = options.localeInterpolate;\r\n\r\n    if (isString(options.localeInterpolate)) {\r\n        localeInterpolate = [\r\n            options.localeInterpolate\r\n        ];\r\n    } else if (isRegExp(options.localeInterpolate)) {\r\n        localeInterpolate = [\r\n            options.localeInterpolate\r\n        ];\r\n    }\r\n\r\n    if (Array.isArray(localeInterpolate)) {\r\n        localeInterpolate = localeInterpolate.map(x => isRegExp(x) ? x : toRegExp(x));\r\n    }\r\n\r\n    return localeInterpolate;\r\n};\r\n\r\n/**\r\n * @param {*} loaderContext\r\n * @returns {Object}\r\n */\r\nexport default loaderContext => {\r\n    const options = getOptions(loaderContext) || {};\r\n\r\n    options.localeInterpolate = getLocaleInterpolate(options);\r\n\r\n    return defaults(options, DEFAULT_OPTIONS);\r\n};\r\n"]}